{
	"info": {
		"_postman_id": "sghss-api-collection",
		"name": "SGHSS API - Sistema de Gestão Hospitalar",
		"description": "Collection completa para testar a API do Sistema de Gestão Hospitalar e de Serviços de Saúde (SGHSS)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Autenticação",
			"item": [
				{
					"name": "Status da API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"status"
							]
						},
						"description": "Verifica se a API está online e funcionando"
					}
				},
				{
					"name": "Registrar Usuário Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('user_id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"123456\",\n    \"email\": \"admin@sghss.com\",\n    \"tipo_usuario\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Registra um usuário administrador no sistema"
					}
				},
				{
					"name": "Registrar Usuário Médico",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"dr_silva\",\n    \"password\": \"medico123\",\n    \"email\": \"dr.silva@sghss.com\",\n    \"tipo_usuario\": \"medico\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					}
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access_token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set('token', jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Autentica o usuário admin e obtém token JWT"
					}
				},
				{
					"name": "Login Médico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access_token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set('medico_token', jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"dr_silva\",\n    \"password\": \"medico123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					}
				},
				{
					"name": "Obter Perfil",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"profile"
							]
						},
						"description": "Obtém o perfil do usuário autenticado"
					}
				},
				{
					"name": "Login com Credenciais Inválidas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response has error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('error');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"senha_errada\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Testa login com credenciais inválidas"
					}
				}
			]
		},
		{
			"name": "Gestão de Pacientes",
			"item": [
				{
					"name": "Cadastrar Paciente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has paciente data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('paciente');",
									"    pm.environment.set('paciente_id', jsonData.paciente.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"João Silva Santos\",\n    \"cpf\": \"12345678901\",\n    \"data_nascimento\": \"1985-03-15\",\n    \"endereco\": \"Rua das Flores, 123, Centro\",\n    \"telefone\": \"11987654321\",\n    \"email\": \"joao.silva@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						},
						"description": "Cadastra um novo paciente no sistema"
					}
				},
				{
					"name": "Cadastrar Segundo Paciente",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Maria Oliveira Costa\",\n    \"cpf\": \"98765432100\",\n    \"data_nascimento\": \"1990-07-22\",\n    \"endereco\": \"Av. Principal, 456, Jardim\",\n    \"telefone\": \"11876543210\",\n    \"email\": \"maria.oliveira@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						}
					}
				},
				{
					"name": "Listar Pacientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has pacientes array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('pacientes');",
									"    pm.expect(jsonData.pacientes).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						},
						"description": "Lista todos os pacientes ativos"
					}
				},
				{
					"name": "Buscar Paciente por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pacientes/{{paciente_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes",
								"{{paciente_id}}"
							]
						},
						"description": "Busca um paciente específico por ID"
					}
				},
				{
					"name": "Atualizar Paciente",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"telefone\": \"11999888777\",\n    \"endereco\": \"Rua das Flores, 123, Centro - Atualizado\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/pacientes/{{paciente_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes",
								"{{paciente_id}}"
							]
						},
						"description": "Atualiza dados de um paciente"
					}
				},
				{
					"name": "Buscar Pacientes com Filtro",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pacientes?search=João&page=1&per_page=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							],
							"query": [
								{
									"key": "search",
									"value": "João"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "5"
								}
							]
						},
						"description": "Busca pacientes com filtro de nome"
					}
				},
				{
					"name": "Tentar Cadastrar CPF Duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Response has error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('error');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Outro Paciente\",\n    \"cpf\": \"12345678901\",\n    \"email\": \"outro@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						},
						"description": "Testa validação de CPF duplicado"
					}
				},
				{
					"name": "Desativar Paciente",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pacientes/{{paciente_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes",
								"{{paciente_id}}"
							]
						},
						"description": "Desativa um paciente (exclusão lógica)"
					}
				}
			]
		},
		{
			"name": "Gestão de Consultas",
			"item": [
				{
					"name": "Agendar Consulta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has consulta data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('consulta');",
									"    pm.environment.set('consulta_id', jsonData.consulta.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paciente_id\": 1,\n    \"medico_id\": 2,\n    \"data_consulta\": \"2025-01-15 14:30\",\n    \"tipo_consulta\": \"presencial\",\n    \"observacoes\": \"Consulta de rotina\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/consultas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas"
							]
						},
						"description": "Agenda uma nova consulta"
					}
				},
				{
					"name": "Listar Consultas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/consultas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas"
							]
						},
						"description": "Lista todas as consultas"
					}
				},
				{
					"name": "Buscar Consulta por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/consultas/{{consulta_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas",
								"{{consulta_id}}"
							]
						},
						"description": "Busca uma consulta específica por ID"
					}
				},
				{
					"name": "Atualizar Status da Consulta",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"realizada\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/consultas/{{consulta_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas",
								"{{consulta_id}}",
								"status"
							]
						},
						"description": "Atualiza o status de uma consulta"
					}
				},
				{
					"name": "Criar Prontuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has prontuario data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('prontuario');",
									"    pm.environment.set('prontuario_id', jsonData.prontuario.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{medico_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"diagnostico\": \"Hipertensão arterial leve\",\n    \"prescricao\": \"Losartana 50mg - 1 comprimido pela manhã\",\n    \"exames_solicitados\": \"Hemograma completo, Glicemia de jejum\",\n    \"observacoes_medicas\": \"Paciente apresenta pressão arterial elevada. Orientado sobre dieta e exercícios.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/consultas/{{consulta_id}}/prontuario",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas",
								"{{consulta_id}}",
								"prontuario"
							]
						},
						"description": "Cria um prontuário para uma consulta"
					}
				},
				{
					"name": "Listar Consultas com Filtros",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/consultas?status=agendada&data_inicio=2025-01-01&data_fim=2025-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"consultas"
							],
							"query": [
								{
									"key": "status",
									"value": "agendada"
								},
								{
									"key": "data_inicio",
									"value": "2025-01-01"
								},
								{
									"key": "data_fim",
									"value": "2025-12-31"
								}
							]
						},
						"description": "Lista consultas com filtros de status e data"
					}
				}
			]
		},
		{
			"name": "Testes de Segurança",
			"item": [
				{
					"name": "Acesso sem Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response has error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('error');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						},
						"description": "Testa acesso a endpoint protegido sem token"
					}
				},
				{
					"name": "Token Inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer token_invalido_123"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pacientes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pacientes"
							]
						},
						"description": "Testa acesso com token inválido"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		}
	]
}

